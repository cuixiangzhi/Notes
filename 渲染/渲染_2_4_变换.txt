矩阵基础
    单位矩阵  对角线全1,其他元素全0
    转置正交  逆矩阵:相乘结果为单位矩阵 转置矩阵:行列互换 正交矩阵:逆矩阵互为转置矩阵
    向量叉乘  AxB = (AyBz-AzBy,AzBx-AxBz,AxBy-AyBx)
    变换矩阵  在目标坐标系下定义的三个正交基向量构成的矩阵*在这个坐标系下定义的向量
    基变换    点乘求投影从世界空间转切线空间(X*V,Y*V,Z*V),加法求和从切线空间转世界空间(X*V.x+Y*V.y+Z*V.z)
    法线变换  法线经过非等比缩放的M矩阵和MV矩阵变换之后和表面不垂直,需要用M或者MV的逆转置矩阵计算
    变换顺序  缩放->旋转->平移 T矩阵*R矩阵*S矩阵*列向量
坐标系
    左手坐标系 x右y上z里
    右手坐标系 x右y上z内
    旋转正向   从坐标轴的正向看向原点,左手坐标系下,顺时针旋转为正向 右手坐标系下,逆时针旋转为正向
    切线坐标系 表面UV和法线构成的TBN坐标系,根据世界空间下的顶点切线和法线求出副切线,得到TBN矩阵
    模型坐标系 局部坐标系,是指模型本身的坐标系,以物体中心为原点,局部点经过M矩阵变换到世界空间,M矩阵是模型在世界空间下的T*R*S(模型在世界坐标系下的局部偏移旋转和缩放)
    世界坐标系 参考坐标系,经过V矩阵变换转换到视图坐标系,V是摄像机M矩阵的逆矩阵(S逆*R逆*T逆)
    视图坐标系 局部坐标系,经过P矩阵转换到裁剪坐标系
    裁剪坐标系 齐次坐标系,经过透视除法转换到设备坐标系
    设备坐标系 OGL范围是[-1,1],DX和METAL范围是[0,1],XY都是[-1,1],经过视口变换转换为屏幕坐标[w,h]
    屏幕坐标系 
    窗口坐标系
    视口坐标系
矩阵变换
    平移变换              
        |1 0 0 tx|   |1 0 0 -tx|  
        |0 1 0 ty|   |0 1 0 -ty|
        |0 0 1 tz|   |0 0 1 -tz|
        |0 0 0  1|   |0 0 0  1|    
    缩放变换
        |s 0 0 0|   |1/s 0   0    0|  
        |0 s 0 0|   |0   1/s 0    0|
        |0 0 s 0|   |0   0   1/s  0|
        |0 0 0 1|   |0   0   0    1|    
    旋转变换
        欧拉角
            旋转都是从(0,0,0)开始按ZXY顺序旋转,跟当前状态没有任何关系,因此插值是不可能平滑的
        四元数
            复数
                z = a + bi a是实部,b是虚部,i是虚数单位,乘法是普通的乘法
            四元数
                q = w + xi + yj + zk
                q*= w - xi - yj - zk 共轭四元数是虚部取反
                q^= q*/|q|           逆四元数是共轭四元数除以模长,单位四元数共轭等于逆
                q = cos0 + xsin0 + ysin0 + zsin0 绕旋转轴U=(x,y,z)旋转20角度,根据旋转轴正交分解和虚数乘法原理得出v'= qvq*
            欧拉角->四元数
                欧拉角首先拆分为3个坐标轴为基础的四元数,然后按照旋转顺序ZXY进行乘法化简,得出最终的四元数,或者直接对乘法化简得出最终公式
    投影变换
        透视投影
            投影矩阵
                m00: 已知x'/x=n/z x'=nx/z m00=n 变换到[-1,1]时m00=n/r
                m11: 已知y'/y=n/z y'=ny/z m11=n 变换到[-1,1]时m11=n/t
                m22&m23: 已知z'始终为n,为了保证屏幕空间线性插值令z'=a+b/z从[n,f]变换到[-1,1] 联立方程解得a=(f+n)/(f-n) b=2nf/(f-n)
                m32: 为了执行裁剪操作w=z m23=1
                |n/r  0     0            0          ||x|
                |0    n/t   0            0          ||y|
                |0    0     (f+n)/(f-n)  (2fn)/(f-n)||z|
                |0    0     1            0          ||1|
            齐次裁剪
                投影后齐次坐标x'满足-w<x'<w,y'满足-w<y'<w,z'满足-w<z'<w
            透视除法
                投影变换得到的齐次坐标除以w得出NDC坐标,w为0会发生除0异常,因此近裁面限制大于0,UNITY最小为0.01
            深度精度
                深度值Zndc与Zcamera成反比,距离近平面越远,Zcamera越大Zndc值变化越小,深度的精度也就越低
                glPolygonOffset(factor,units)可以解决z-fighting闪烁问题,(-1,-1)用来渲染前景,(1,1)表示距离摄像机更远,用来渲染背景
            NDC转VIEW
                zbuffer存储的是[0,1]的非线性数值,Zcamera=1/(aZndc+b) a=(f-n)/nf b=-1/n
        正交投影
            投影矩阵
                m00: 已知x'=x 变换到[-1,1]时m00=1/r
                m00: 已知y'=y 变换到[-1,1]时m00=1/t
                m22&m23: 已知z'=z,为了执行裁剪操作z'
                m33: 因为xyz之间没有关系,因此第一步就变换到了[-1,1],不需要归一化了 m33=1
                |1/r 0      0       0          ||x|
                |0   1/t    0       0          ||y|
                |0   0      2/(n-f) (f+n)/(n-f)||z|
                |0   0      0       1          ||1|
    视口变换
        变换矩阵(w,h是屏幕宽高)
            |0.5w  0     0        0.5w||x|
            |0     0.5h  0        0.5h||y|
            |0     0     0.5      0.5 ||z|
            |0     0     0        1   ||w|