颜色模型
	三刺激理论
		人眼视网膜主要有三种类型的感光细胞,分别对红光、绿光、蓝光敏感
			感光细胞:视锥细胞、视杆细胞
			视锥细胞对强光敏感,分布在中央区域
			视杆细胞对暗光敏感,分布在周边区域
		三原色其中两种任意组合都得不出第三种颜色,三种颜色混合可以得到任意颜色
	RGB颜色模型
		RGB模型是显示器的物理模型,图像最终都是以RGB模型显示的
	YUV颜色模型
		又叫YCbCr,是彩色电视采用的颜色编码方法,色差是指基色减去亮度,为了兼容黑白电视机,可以只接受Y信号
		Y是亮度信号,U(R-Y)和V(B-Y)是两个色差信号,YUV经过计算可得出原始的RGB
		Y= 0.299R+0.587G+0.114B 	U=-0.147R-0.289G+0.436B 	V=0.615R-0.515G-0.100B
		R=Y+1.14V		G=Y-0.39U-0.58V			B=Y+2.03U
	HSV颜色模型
		色相Hue
			某一种颜色,用角度来度量,范围是0-360
		饱和度Saturation
			颜色接近光谱颜色的程度,用比例表示,范围是0%-100%
			S = {[max(R,G,B)-min(R,G,B)]/max(R,G,B)} * 100%
		明度Value
			颜色明暗程度,用数值表示,范围是0-100%
			V = [max(R,G,B) / 255] * 100%
	HSL颜色模型
		色相Hue
			某一种颜色,用角度来度量,范围是0-360,8位支持256种不同色调
			0-红 60-黄 120绿 180-青 240-蓝 300-洋红
		饱和度Saturation
			颜色接近光谱颜色的程度,用比例表示,范围是0%-100%
		亮度Lightness
			颜色明暗程度,用数值表示,范围是0-100%
		区别
			HSL能够更直观的表示饱和度和亮度,HSL亮度直接控制黑白变换,不符合饱和度定义
			HSV亮度为0时不是白色,只有饱和度为0时亮度控制黑白变换
	CMYK颜色模型
		印刷
	伽马校正
		原理
			CRT显示器输入电压与亮度不是线性关系,y=pow(x,gamma) gamma=2.2
			LCD显示器为了兼容也做了相同的非线性处理
			如果输入颜色不做任何处理,那么显示输出的颜色会偏暗,因此原始颜色需要执行GAMMA校正操作,也就是y=pow(x,1/2.2)
		计算
			颜色计算一般都是在线性空间下进行的,计算结果也是线性的
			sRGB表示贴图是在Gamma空间下的,也就是做过0.45的Gamma纠正
			线性空间下shader读取到的贴图是线性的
			线性空间下后处理贴图是线性的
		实现
			OpenGL有对应的sRGB格式选项表示纹理的格式,硬件会根据格式做对应的校正,UnityGamma空间下sRGB无效
			OpenGL有对应的sRGB格式选项表示缓冲区格式,硬件会在读取和写入时执行Linear->Gamma的转换
		问题
			在Gamma空间下进行颜色计算、透明度混合、MipMap时需要自己实现0.45及2.2的纠正
	灰度图像
		使用灰度值代替RGB值,可以用于图像的形态特征提取
		灰度值计算有很多公式,一般使用YUV的Y值计算公式
	饱和度
		较低的饱和度偏向于灰色,灰度图饱和度为0
		灰度图和原图做插值得出不同饱和度的图像
		Unity灰度计算经验公式 gray = 0.2125 * r + 0.7154 * g + 0.0721 * b
	对比度
		对比度越低颜色差异越小,纯灰色灰度图对比度为0,RGB=(0.5,0.5,0.5)
		灰度图和原图做插值可以得出不同对比度的图像
颜色混合
	基础
		源颜色是指当前计算出的颜色 
		目标颜色是指帧缓冲区内的颜色
	加法混合
		叠加模式 AlphaBlend One One
		混合模式 AlphaBlend SrcAlpha OneMinusSrcAlpha
		颜色与透明度一起混合
			源颜色带透明度*源系数+目标颜色带透明度*目标系数
		颜色与透明度分开混合
			源颜色*源颜色系数+目标颜色*目标颜色系数
			源颜色透明度*源颜色透明度系数+目标颜色透明度*目标颜色透明度系数
	乘法混合
		正片叠底 srcColor * dstColor,暗室照明效果,白光经过两个颜色过滤,用来模拟阴影效果
	光照贴图是加法混合,光照计算是乘法混合
	开启blend
		glEnable(GL_BLEND);
		glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);
		glDisable(GL_BLEND);
颜色缓存
	帧缓存,存储当前帧每个像素的颜色
	摄像机的清理选项一般包括:天空盒、固定颜色、深度、不清理 
		glClearColor*() 设置摄像机的颜色缓存清理颜色值
		glClearDepth(1);
		glClearStencil(0); 
		glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT)	
	透明度测试
		glEnable(GL_ALPHA_TEST);
		glAlphaFunc(GL_GREATER,0);
		glDisable(GL_ALPHA_TEST);