Albedo
    固有色贴图,一定没有光照和阴影的颜色信息,只包含物体本身的颜色
Metalness
    金属度单通道贴图,一定是接近黑白图的,一个金属材质的金属度一定是接近1的,非金属一定是接近0的
Smoothness
    光滑度单通道贴图,用来计算BRDF中的DFG
AmbientOcclusion
    环境光遮挡贴图,用于计算表面接收到的光的遮挡情况,和阴影以及衰减共同影响光的强度
NormalMap
    原理
        T:切线 B:副切线 N:法线
        1.光照计算时需要用法线来体现出物体表面的凹凸感
        2.通过一张纹理来存储每个像素点的法线来减少面数增加凹凸细节
        3.法线贴图存储的法线是切线空间下的一个向量,以TBN表示
            施密特正交化 normalize(T - dot(T, N) * N)
            1.先把光线和视线从世界空间变化到模型坐标系下
            2.根据模型局部法线和切线计算TBN矩阵
            3.把模型坐标下的光线和视线变换到切线空间
            4.TBN矩阵是行优先填充的,TBN*向量是局部坐标系变换到TBN坐标系
        4.法线贴图存储的RGB范围是[0,1],而法线范围是[-1,1],因此存储法线和解析法线需要一个转换公式 
          rgb=normal*0.5+0.5 normal=rgb*2-1 法线贴图法线不会偏移Z轴太远,因此法线贴图都是偏蓝色的
          对应CGINC内的UnpackNormal函数
CubeMap
    通过摄像机拍摄六个方向的观察结果得出由六个面组成的立方体纹理
    纹理映射
        1.根据方向向量得出最大维度所在方向的纹理
        2.其它两个维度除以最大维度,缩放到[-1,1]
        3.通过2n+0.5把纹理坐标映射到[0,1]之内
        4.RenderToCubeMap会使用摄像机的位置和远裁面等渲染CubeMap
    反射折射
        1.texCUBE(reflect(-v,n))
        2.texCUBE(refract(-v,n,ratio))
RenderTexture
    渲染纹理,包含一个ColorBuffer和一个DepthBuffer,DepthBuffer包含16位depth和8位stencil
LightMap
    光照贴图,存储了针对静态物体的间接光照信息,利用光线追踪算法使用环境CudeMap作为光源生成