采样
	判断像素点是否被多边形覆盖
	不带抗锯齿的采样是在像素中心做一次采样
	抗锯齿是对一个像素采样多次,对采样结果进行加权平均
绘图
	二维图形画线、画圆、椭圆、贝塞尔曲线、凸多边形填充(pnpoly算法判断像素点与凸多边形的包含关系)
	x方向增量为1,y方向增量小于1,适合使用中点算法，如果y增量大于1,则以y方向增量为主
	画线
		直线方程 ax+by+c = 0
		DDA算法
			斜率为k,k = (y1-y0)/(x1-x0)  x1-x0=1,y1=y0+k
			水平方向x每次递增为1,y每次递增k,四舍五入计算y值
		中点画线
			x方向每次递增1
			y方向计算y和y+1的中点,在直线下方还是直线上方,下方则为y+1,上方则为y
			f(x,y) == 0 在直线上  f(x,y) < 0 在直线下方  f(x,y) > 0 在直线上方
			f(x0+1,y0+0.5)=ax0+a+by0+0.5b+c=a+0.5b f(x0+2,y0+0.5)=ax0+2a+by0+0.5b+c=2a+0.5b f(x0+2,y0+1.5)=ax0+2a+by0+1.5b+c=2a+1.5b
			d0=2a+b d1=2a d2=2(a+b) d0<0则下一点为增量为d2,大于0下一点增量为d1
			首先绘制点(x0,y0),计算a=(y0-y1) b=(x1-x0),计算d0,循环直到x=x1
			d0为当前点右侧第一个点增量,d1、d2为当前点右侧第二个点增量,根据d0符号选取
	画圆
		圆的方程 x^2+y^2=r^2
		中点画圆
			x方向每次递减1
			y方向计算y和y-1的中点,在曲线下方还是曲线上方,下方则为y-1,上方则为y
			f(x,y) == 0 在圆上  f(x,y) < 0 在圆内  f(x,y) > 0 在圆外
			x0,y0 = (0,r) 
			d0 = (x0 + 1)^2 + (y0 - 0.5)^2 -r^2 = 1.25 - r
			d1 = (xp + 2)^2 + (yp - 0.5)^2 -r^2 = d0 + 2xp + 3
			d2 = (xp + 2)^2 + (yp - 1.5)^2 -r^2 = d0 + 2(xp-yp) + 5
			如果d0 < 0则下一点为p2,增量为d2 = 2xp - 2yp + 5,否则下一点为p1,增量d1 = 2xp + 3
	画面
		逐点扫描法
			针对所有像素点使用pnpoly算法判断点是否在多边形内部,效率较低,没有考虑区域的连贯性
		扫描线算法(阉割版)
			首先把三角形分成上下两部分,沿着左右两条边从下到上从左到右扫描,每次y递增1,x递增1/k
	区域填充
问题
	1.浮点精度
		顶点坐标都是浮点,光栅时需要的是整数,四舍五入近似计算会导致误差累积
	2.线性插值
		透视投影之后三角面的属性线性插值的比例要进行透视矫正
		投影前直线方程为ax+bz=c 根据投影点得出1/z=ax'/cn+b/c xt=lerp(x0,x1,t) 化简得出1/zt=lerp(1/z0,1/z1,t) 
		顶点属性(bt-b0)/(b1-b0)=(zt-z0)/(z1-z0)=t 化简得出bt/zt=lerp(b0/z0,b1/z1,t)