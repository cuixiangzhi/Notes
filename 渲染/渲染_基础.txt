图形
	图形 线框图 真实感图形 图像 图形方程 几何属性 非几何属性
	渲染指令调用顺序
		应用程序->操作系统->驱动程序->显卡
	多线程渲染
		逻辑线程和渲染线程分离,使用RingCommandBuffer产生和消耗渲染命令
		逻辑线程更新帧N,渲染线程渲染帧N-1,逻辑帧N结束后等待渲染帧结束再开始下一帧计算
	渲染状态
		基本状态 Cull AlphaTest Offset Ztest ZWrite Blend ColorMask
		状态分组 queue->lightmap->distance->shader->material->pass->objects
		状态切换 根据当前分组的数据检查需要切换哪些状态
	渲染循环
		首先根据摄像机视椎体范围进行裁剪,得到可见结点列表
		然后遍历可见列表,针对每个可见结点
			然后遍历当前结点的材质列表,针对每个材质
				创建一个渲染对象,记录matIndex subShaderIndex renderQueue layerData batchIndex lightmapIndex shader material distance nodeData
	渲染顺序
		不透明物体从前往后渲染,利用EarlyZ技术减少OverDraw
		半透明物体从后向前渲染,半透明物体不写入深度,执行AlphaBlend操作,EZ在这里也可以用
	渲染流水线
		顶点着色器(MVP变换)->曲面细分着色器->几何着色器->图元装配->CVV裁剪->透视除法->视口变换->光栅化->Early-Z优化
		片段着色器->归属测试->裁剪测试->Alpha测试->深度测试->模板测试->颜色混合
硬件
	显卡分类
		独立显卡 集成显卡 核心显卡
	显卡型号
		ADM RadeOn HD 美国AMD
		NVIDA Geforce GTX 美国英伟达
		POWERVRSGX 英国Imagination
		MAIL 英国ARM
		Andreno 美国高通
	显示器接口
		VGA接口输入是模拟信号,通过显卡的RAMDAC转换
		HDMI接口输入是数字信号,显卡直接传输
		DVI接口输入是数字信号,显卡直接传输
	显示器刷新
		https://blog.csdn.net/a740169405/article/details/70548443
	GPU架构
		ALU 输入寄存器 常量寄存器 纹理寄存器
		thread  : 执行shader的基本单元,每个thread都有自己独占的寄存器
		wrap    : 执行相同shader的一组thread,wrap会记录该组thread执行到了那条指令,wrap有固定的thread数量
		register: 寄存器的数量是固定的,GPU按照wrap执行的shader所需寄存器数量来分配,shader占用寄存器越多,wrap就越少
		swap    : gpu的一个核心执行一个wrap,核心数越多同时执行的wrap数量越多,wrap遇到阻塞操作时会被换出
	驱动程序
		驱动程序不同平台有不同的规范以及扩展
		硬件加速部分渲染指令由硬件执行,例如光栅、矩阵变换、着色、采样、光照计算等等
接口
	opengl和directx都属于操作系统层面的编程接口
	directx是windows平台的专属API
	metal是苹果系列设备的API
	opengles是android设备的的API
	vlukan是跨平台的API,不是所有手机都支持
版本
    DX版本 OGL版本 ES版本   SM版本  特点    						
    8.0    1.0	   1.0		1.0   	固定管线
	9.0    2.0	   2.0		2.0 	可编程管线
	9.0c   3.0	   3.0		3.0 	
	10.0   3.3				4.0     统一渲染架构
	10.1  					4.1
	11.0   4.2				5.0            
	12     4.5              5.1     
	SM3.0版本特性
		32位浮点运算 MSAA抗锯齿 65535条指令上限 HDR支持
		GPUInstance