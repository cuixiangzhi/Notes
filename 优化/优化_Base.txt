界面
    字体规范
        公共字体 TTF字体(1个)
    图集规范
        公共图集 2048*2048*(3~4个,1个物品图集,1个通用背景图集,1个通用小图图集)
        功能图集 2048*1024|1024*1024*(3~5) 1024*512|512*512*(不限制)
        功能背景 越少越好,最好没有
        功能图标 使用动态图集,大图单个使用,提供缓存机制
        压缩格式 统一使用ASTC6x6 关闭MIPMAP 关闭READ/WRITE
    预设规范
        图集使用 只能使用公共图集和对应系统的功能图集
        背景使用 只能使用公共背景和对应系统的功能背景
        图标使用 预设上不保留对图标的引用,通过代码动态加载
角色
场景
特效
音频
    音频采样 8kHZ:人声 22kHZ:广播 44kHZ:音频 声道:Mono&Stereo 编码:PCM无损1411kbps,AAC有损256kbps,OGG有损128kbps
    音频格式 中长音乐:Streaming+Vorbis 短音效:DeCompressOnLoad+ADPCM
    音频数量 2D:1 2D_ONE:1 3D:5 BG:1 CG:2
视频
    视频码率 720P:低码率1Mbps,中码率2Mbps,高码率4Mbps 1080P:低码率2Mbps,中码率4Mbps,高码率8Mbps
    视频格式 MP4格式:H264视频编码和AAC音频编码 WEBM格式:VP8视频编码和VORBIS音频编码
纹理
动画
阴影
    1.LODGroup
        使用LODGroup组件设置Render列表,根据网格占屏比选择适当的LODMESH,支持淡入淡出(unity_LODFade)
        物体占屏比是通过当前屏幕空间AABB和近平面时物体的AABB的比例值来计算
    2.ShaderLOD
        shader实现多个不同LOD的subshader,LOD越低效果越差但是性能越好,例如PBS有高中低三个版本
        shader.globalMaximumLODLevel设置当前渲染质量,低于该值的shader的pass才会被使用
        shader.maximumLodLevel设置特定shader的渲染质量
    4.ParticleLOD
        prefab级别的LOD:按照LOD距离或者平均帧率来计算出当前prefab应该用哪一级LOD,每隔一段时间检测一次
        system级别的LOD:指定每个ParticleSystem所属的LOD级别,LOD变更的时候进行比较
    4.QualityLevel
        运行时通过修改Unity的渲染配置,来提高质量或者降低消耗,通过QualitySettings.SetQualityLevel调节
        渲染
            PixelLightCount Important模式一定是逐像素的,Important个数小于指定个数会选取Auto模式的作为逐像素光源
            TextureQuality  降低显存占用(0级MipMap,贴图R/W一定要关闭),FullRes是完整分辨率,HalfRes是一半分辨率
            AnisoTropicTex  各向异性纹理采样是否开启,开启之后远处的细节会变清晰,PerTexture会使用贴图的设置,ForceOn会强制设置所有贴图
            AntiAliasing    MSAA抗锯齿的采样点个数,可以是2x、4x、8x,需要配合Camera的MSAA选项使用
            SoftParticles   开启之后粒子会计算深度差dz来柔化边缘(当粒子距离物体特别近的时候穿插不会出现硬边),计算需要深度图
            Resolution      通过ScreenAPI设置渲染目标分辨率或者自定义RT作为渲染目标或者使用Camera的动态分辨率选项
        阴影
            Shadows          软阴影会多一步模糊操作,可以减弱锯齿
            ShadowDistance   距离摄像机的深度值低于该值时使用实时阴影,同时该值会影响划分阴影层级的范围
            ShadowNearOffset 直接使用8个顶点计算时可能会导致更外面的物体没有产生阴影(比如高大的建筑物在视椎体外面)
            ShadowCascades   把观察体划分为N个等级,每个等级根据8个顶点和平行光方向计算正交摄像机的AABB,提高近处物体的阴影深度的精度
        其它
            BlendWeights     蒙皮顶点最多受几根骨骼影响,减少该值可以降低蒙皮计算量,提升CPU性能
            VSyncCount       关闭后Unity会全速跑Update,否则会根据同步方式sleep一段时间在执行Update,高帧率可以减少消耗
            LODBias          不同LOD级别之间切换的偏移比例,设置为1在LOD边界立即切换,数值越大高模保留距离越大
            MasterTextureLimit 强制指定最高MIP等级
        加载
            AUPTimeSlice     渲染线程每帧上传数据的时间片,会消耗2倍该时间用于上传,默认值是2ms
            AUPBufferSize    主线程传递数据给渲染线程的RingBuffer大小
    5.GraphicsTier
        阴影
            CascadedShadows  级联阴影,根据摄像机观察范围划分N个等级分别使用不同的深度图,提高近处物体的精度
        HDR
            UseHDR&HDRMode   HDR模式总开关,HDR模式摄像机渲染帧缓冲的格式,FP16是64位,R11G11B10是32位不带A通道
                                开启后会额外创建一个缓冲区存储HDR计算结果
        反射
            BoxProjection    视线向量的起点不在Cubemap中心,因此需要经过计算转换为正确的采样向量
LOD
    场景 shaderLOD waterLOD grassLOD treeLOD terrainLOD thingsLOD npcLOD effectLOD lightModelLOD shadowLOD postLOD(bloom colorgrading hdr dof tod fog weather)
    角色 shaderLOD modelLOD shadowLOD animLOD visibleLOD dynamicBone lightProbes ReflectionProbes
    特效 countLOD(priority quality costlevel)
    音效 countLimit
    物理 fixedDeltaTime
    DPI  resolution
画质
    低画质 DisableShadow
    中画质 ShadowMask MediumResolution HardShadowOnly StableFit
    高画质 DistanceShadowMask.40 HighResolution HardAndSoftShadow StableFit
    顶级画质 DistanceShadowMask.80 VeryHighResolution HardAndSoftShadow CloseFit FourCascades(5.7 13.3 26.7 53.3)
烘焙
    Cluster  unity先进行体素化然后对体素进行光照计算,IndirectResolution决定体素的多少,和光照图大小无关,调试阶段可以降低
    AO       调试阶段可以关闭AO生成,提高迭代速度
    LightmapParamters  提高烘焙速度Resolution-0.2 ClusterResolution0.4   Resolution-3 ClusterResolution0.6  只影响计算精度,不影响光照图大小和UV分布
    Lightmap 分辨率决定了1米多少个像素
    UVChartingControl  修改物体在光照贴图上的UV分布

    Mixed光源  根据场景原画设定灯光强度和颜色、根据原画阴影设定方向
    Baked光源  只有主光源会有很多暗角,色调单一  补光平行光光源最好一个,太多不真实,  建议用ColorGrading和Lut来处理

    球谐光照适用  结构复杂的小物件 颜色单一  UVChart分布不合理
    低画质可以降低lightprobe数量

    ReflectionProbe 256Bake 禁用Blending

    大场景拆分 避免同一物体占用不同的lightmap
灯光
    模型烘焙质量
        LightmapParamters  
    模型缩放比例
        ScaleInLightmap    粗糙非金属墙面,主要是低频光,0.5  城市街道3 野外大面积地形植被0.5 主体物件2
    光照贴图大小
        LightmapResolution 每米几个像素,数值越大质量越高内存也越大,地形0.1~0.5,室外0.5~1,室内2~3
        LightmapPadding    图元之间的像素间隔,避免不同图元由于采样算法导致混合了不同物体的光照颜色(光照溢出)
        LightmapSize       控制每张贴图最大多大,超过这个数值会生成多张
        DirectionMode      是否生成间接光的贡献度最大的光方向贴图,可以制作出间接高光效果
    光照贴图质量(样本是不是指光源发射光线的数量?)
        Bounces            光线反射次数
        EnvironmentSamples 控制环境光样本数量                                            调试阶段可以降低
        DirectSamples      控制直接光样本数量(在光源方向上采样的光线数量)                 调试阶段可以降低
        IndirectSamples    控制间接光样本数量(在半球方向上采样的光线数量,室外推荐值为100) 调试阶段可以降低
        IndirectIntensity  控制间接光整体强度
        AmbientOcclusion   控制间接光的AO效果  调试阶段可以关闭
        AlbedoBoost        控制间接光反射比例,默认值1是物理精确的
        Filter             模糊图片,减弱光照贴图噪点
    环境光照
        有三种模式,固定颜色、渐变颜色、天空盒,用来计算路径追踪没有碰到光源时的光照颜色
    环境反射
        Bounces            控制镜子类的物体互相反射最多反射几次
光照探头
    LightProbe
        数据存储
            LightmapSettings.lightProbes.bakedProbes
        自动摆放
            探针应该摆放在发生亮度变化的位置,可以沿着寻路图大量设置LightProbe,然后过滤掉变化不大的
        实时补光
            不要用补光的方式来提高角色亮度,可以在LightProbe中添加环境光来提高动态物体亮度
    ReflectionProbe
        给所有物体提供间接反射光,动态的间接高光
光照模式
    Realtime
        直接光实时计算,阴影使用ShadowMap计算(ShadowMap只计算ShadowDistance以内的动态对象)
        RealtimeGI计算静态物体表面所有可能的反射光线,运行时动态计算间接光
        IndirectMultiplier在强度不是0并且不开启RealtimeGI时会把间接光烘焙到LightMap
    Mixed
        BakeIndirect
            直接光实时计算,间接光存储在LightMap和LightProbes,阴影使用ShadowMap计算
        ShadowMask
            直接光实时计算,间接光存储在LightMap和LightProbes,阴影使用ShadowMask(最多4个Mixed光源,存储直接光被静态物体遮挡信息)
                            动态物体Receive     静态物体Receive
            动态物体Cast    ShadowMap           ShadowMap+ShadowMask
            静态物体Cast    ShadowMap           ShadowMap+ShadowMask
    Baked
        直接光、间接光、阴影烘焙到LightMap和LightProbes,只对静态物体生效,LightProbes对动态物体生效
渲染路径
    Forward
        MESH->VS->FS(光照计算)->FRAME_BUFFER
        ForwardBase: 
            #pragma multi_compile_fwdbase
            计算自发光、环境光、主平行光、SH光、光照贴图、阴影
            Unity中设置为NotImportant的光会被按照逐顶点或者SH处理
            逐顶点光照计算 Shade4PointLights(...) unity_4LightPosXYZColorAtten
            球谐光照计算 
        ForwardAdd:  
            Blend One One 
            #pragma multi_compile_fwdadd
            计算额外的逐像素光源,AddPass会根据照亮该物体的光源数量被执行多次
            照亮每个物体的逐像素光源个数有限制,Unity会根据光源的类型及对物体的影响程度(距离、强度、类型等)进行排序
            _LightColor0和_WorldSpaceLightPos0存储当前逐像素光源的颜色和位置
        光源信息
            Unity会根据当前光源类型为PASS的执行设置对应的光源属性 位置、颜色、衰减纹理、变换矩阵
            获取光的方向 
                UnityWorldSpaceLightDir(i.worldPos)
            获取光的颜色 
                _LightColor0
            获取光的衰减 
                平行光为 atten=1
                其它类型 
                        lightSpacePos=mul(_LightMatrix0,i.worldPos).xyz 
                        attenUV=dot(lightSpacePos,lightSpacePos).xx
                        atten=tex2D(_LightTexture0,attenUV).UNITY_ATTEN_CHANNEL;
                直接获取 
                        UNITY_LIGHT_ATTENUATION(atten,i,i.worldPos)
    Deferred
        第一次渲染
            不计算光照信息,只进行深度测试,光照相关数据写入G-BUFFER(坐标、法线、UV、反射系数等等)
        第二次渲染
            遍历屏幕像素,针对有效的像素点读取G-BUFFER数据进行光照计算,更新颜色缓冲区
            Unity默认使用Standard光照模型来计算,Internal-DeferrredShading.shader
        计算流程
            MESH->VS->FS(无光)->MRT(深度、法线、颜色三个BUFFER存储光照所需信息)->FRAME_BUFFER
        GBuffer信息
            RT0,存储漫反射颜色,A通道未使用
            RT1,存储高光反射颜色,A通道存储高光指数
            RT2,存储法线方向,A通道未使用
            RT3,存储自发光+光照贴图+反射探针
    ShadowCaster
        渲染阴影映射纹理时调用该shader,没有会调用Fallback的对应shader,否则不产生阴影