GCC编译 
    -g -m64 -O2 -c -o -I -static -l -std -fPIC -shared -Wl 
    ar rcs
GDB调试
	gdb --pid
	r 运行
	c 继续
	n F10
	s F11
	b 文件:行号 函数 
	d 删除断点
	p 打印
VI编辑器
	编辑模式
		输入i进入编辑模式,编辑文本
	命令模式
		输入esc进入命令模式
		:行号,跳转到指定行
		/ name 向后查找
		? name 向前查找
		:wq 保存并退出
		:set number 显示行号
	
NDK编译 
	LOCAL_PATH := $(call my-dir)
	include $(CLEAR_VARS)
	LOCAL_MODULE := module_name
	LOCAL_CFLAGS :=
	LOCAL_CPPFLAGS := $(LOCAL_CFLAGS)
	LOCAL_LDLIBS := 
	LOCAL_C_INCLUDES := 
	LOCAL_SRC_FILES :=
  	$(call import-add-path, $(LOCAL_PATH)/)
  	LOCAL_WHOLE_STATIC_LIBRARIES +=
  	include $(BUILD_STATIC_LIBRARY) 当前模块是一个静态库 .lib or .a
  	include $(BUILD_SHARED_LIBRARY) 当前模块是一个动态库 .dll or .so
  	include $(BUILD_EXECUTABLE)     当前模块是一个可执行程序
  	$(call import-module,../../xxx)

	APP_STL := gnustl_static
	APP_ABI := armeabi-v7a x86
	APP_OPTIM := release
	APP_PLATFORM := android-16
MAC编译
	一个scheme对应一个target
	导出archive  
		xcodebuild archive -scheme xx -configuration Debug|Release -archivePath *.xcarchive -quiet>null
	导出ipa 
		xcodebuild -exportArchive -archivePath *.xcarchive -configuration D|R -exportPath *.ipa -exportOptionsPlist
	lipo -info 查看静态库支持的CPU架构
	lipo -create xx.a x.a -output xx.a合并多个版本的静态库
premake构建跨平台编译工程
	通过lua脚本定义工程生成配置文件
	主要包括 solution 定义项目解决方案如何生成
			project  定义项目如何生成
			_ACTION  定义导出那个编译工具的项目
			todir    定义导出目录
	首先定义 local action = _ACTION or ""
			local todir = "Build"..action
			当前目录是lua文件所在目录
	定义solution
			solution "sln_name"
			configurations { "Debug" , "Release" } 
			location ""
			configuration "Debug*"
			defines { "DEBUG" }
			configuration "Release*"
			flags { "Optimize" }
			defines { "NDEBUG" }
			configuration "windows"
			defines { "_WINDOWS" , "WIN32" , "_CRT_SECURE_NO_WARNINGS" }
	定义project
			project "proj_name"
			language "C++"
			kind "StaticLib" "WindowedApp" "ConsoleApp"
			includedirs { "" }
			files { "" }
			links { "" }
			targetdir ""

			configuration { "linux" or "windows" or "macosx" }
			kind ""
			libdirs {}
			includedirs {}
			buildoptions { `pkg-config --cflags xx` }
			linkoptions { `pkg-config --libs xx` }





